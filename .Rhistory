m <- 60
p <- 0.8
training <- seq(Nb_Games_Played)[-testing]
Points_ref <- as.numeric(Teamz_Statz[,"Points"])[-testing]
Points <- Points_ref
for(i in seq(m)){
vecbin <- sample(seq(length(Var_Exp)),rbinom(1, length(Var_Exp), p))
temp_matrix <- data.frame(cbind(Points_ref, Teamz_Statz[training, vecbin]))
team_rpart_temp <- rpart(Points_ref~., data = temp_matrix,   control = rpart.control(minbucket = 2))
assign(paste("team_rpart_temp", i, sep = ""), team_rpart_temp)
Points <- Points - predict(team_rpart_temp)
}
rez_fin <- 0
new_data <- data.frame(t(Teamz_Statz[testing,]))
rez_suivi <- as.numeric(m)
for (i in seq(m)){
rez_fin = rez_fin + predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
rez_suivi[i] <- rez_fin
}
Teamz_Statz[testing,]
new_data <- apply(Teamz_Statz[testing,], 1, as.numeric)
matrix(Teamz_Statz[testing,])
Teamz_Statz[testing,]
rez_fin <- 0
new_data <- data.frame(as.numeric(Teamz_Statz[testing,]))
names(new_data) <- c("Points", Var_Exp)
c("Points", Var_Exp)
new_data
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
names(new_data) <- c("Points", Var_Exp)
new_data
rez_suivi <- as.numeric(m)
for (i in seq(m)){
rez_fin = rez_fin + predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
rez_suivi[i] <- rez_fin
}
new_data
as.numeric(RM_NA_List_Stats_Teams[[12]][[2]])
RM_NA_List_Stats_Teams[[12]][[2]]
Teamz_Statz <- RM_NA_List_Stats_Teams[[12]][[2]]
apply(Teamz_Statz, 2, as.numeric)
Teamz_Statz
Teamz_Statz
Teamz_Statz <- RM_NA_List_Stats_Teams[[12]][[2]]
Teamz_Statz
Teamz_Statz[1,1]
typeof(Teamz_Statz[1,1])
Teamz_Statz_N <- apply(Teamz_Statz, 2, as.numeric)
Teamz_Statz_N
Teamz_Statz <- RM_NA_List_Stats_Teams[[12]][[2]]
Teamz_Statz_N <- apply(Teamz_Statz, 2, as.numeric)
Nb_Games_Played <- nrow(Teamz_Statz)
k_fold <- numeric(Nb_Games_Played)
testing <- 1
set.seed(0)
m <- 60
p <- 0.8
training <- seq(Nb_Games_Played)[-testing]
Points_ref <- as.numeric(Teamz_Statz[,"Points"])[-testing]
Points <- Points_ref
for(i in seq(m)){
vecbin <- sample(seq(length(Var_Exp)),rbinom(1, length(Var_Exp), p))
temp_matrix <- data.frame(cbind(Points_ref, Teamz_Statz_N[training, vecbin]))
team_rpart_temp <- rpart(Points_ref~., data = temp_matrix,   control = rpart.control(minbucket = 2))
assign(paste("team_rpart_temp", i, sep = ""), team_rpart_temp)
Points <- Points - predict(team_rpart_temp)
}
rez_fin <- 0
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
names(new_data) <- c("Points", Var_Exp)
rez_suivi <- as.numeric(m)
for (i in seq(m)){
rez_fin = rez_fin + predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
rez_suivi[i] <- rez_fin
}
print(c(Teamz_Statz[,"Points"][testing],rez_fin))
plot(rez_suivi)
k_fold[testing] <- rez_fin
for(testing in seq(Nb_Games_Played)){
testing <- 1
set.seed(0)
m <- 60
p <- 0.8
training <- seq(Nb_Games_Played)[-testing]
Points_ref <- as.numeric(Teamz_Statz[,"Points"])[-testing]
Points <- Points_ref
for(i in seq(m)){
vecbin <- sample(seq(length(Var_Exp)),rbinom(1, length(Var_Exp), p))
temp_matrix <- data.frame(cbind(Points_ref, Teamz_Statz_N[training, vecbin]))
team_rpart_temp <- rpart(Points_ref~., data = temp_matrix,   control = rpart.control(minbucket = 2))
assign(paste("team_rpart_temp", i, sep = ""), team_rpart_temp)
Points <- Points - predict(team_rpart_temp)
}
rez_fin <- 0
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
names(new_data) <- c("Points", Var_Exp)
rez_suivi <- as.numeric(m)
for (i in seq(m)){
rez_fin = rez_fin + predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
rez_suivi[i] <- rez_fin
}
print(c(Teamz_Statz[,"Points"][testing],rez_fin))
plot(rez_suivi)
k_fold[testing] <- rez_fin
}
point_max <- max(as.numeric(RM_NA_List_Stats_Teams[[12]][[2]][,"Points"]),k_fold)
plot(as.numeric(RM_NA_List_Stats_Teams[[12]][[2]][,"Points"]),round(k_fold),xlim = c(0,point_max),ylim = c(0,point_max))
lines(c(0,100),c(0,100))
data.frame(cbind(Points_ref, Teamz_Statz_N[training, vecbin]))
Points
team_rpart_temp <- rpart(Points_ref~., data = temp_matrix,   control = rpart.control(minbucket = 2))
team_rpart_temp
Points_ref
temp_matrix
temp_matrix
rpart(Points_ref~., data = temp_matrix,   control = rpart.control(minbucket = 2))
predict(team_rpart_temp)
Points <- Points_ref
Points
Points_ref <- as.numeric(Teamz_Statz[,"Points"])[-testing]
Points <- Points_ref
for(i in seq(m)){
vecbin <- sample(seq(length(Var_Exp)),rbinom(1, length(Var_Exp), p))
temp_matrix <- data.frame(cbind(Points, Teamz_Statz_N[training, vecbin]))
team_rpart_temp <- rpart(Points~., data = temp_matrix,   control = rpart.control(minbucket = 2))
assign(paste("team_rpart_temp", i, sep = ""), team_rpart_temp)
Points <- Points - predict(team_rpart_temp)
}
rez_fin <- 0
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
names(new_data) <- c("Points", Var_Exp)
rez_suivi <- as.numeric(m)
for (i in seq(m)){
rez_fin = rez_fin + predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
rez_suivi[i] <- rez_fin
}
team_rpart_temp
new_data
Points
rez_fin <- 0
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
new_data
names(new_data) <- c("Points", Var_Exp)
new_data
rez_suivi <- numeric(m)
rez_suivi
for (i in seq(m)){
rez_fin = rez_fin + predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
rez_suivi[i] <- rez_fin
}
predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
new_data
eval(parse(text = paste("team_rpart_temp", i, sep = "")))
predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))))
i
team_rpart_temp1
Teamz_Statz <- RM_NA_List_Stats_Teams[[12]][[2]]
Teamz_Statz_N <- apply(Teamz_Statz, 2, as.numeric)
Nb_Games_Played <- nrow(Teamz_Statz)
k_fold <- numeric(Nb_Games_Played)
testing <- 1
set.seed(0)
m <- 60
p <- 0.8
training <- seq(Nb_Games_Played)[-testing]
Points_ref <- as.numeric(Teamz_Statz[,"Points"])[-testing]
Points <- Points_ref
for(i in seq(m)){
vecbin <- sample(seq(length(Var_Exp)),rbinom(1, length(Var_Exp), p))
temp_matrix <- data.frame(cbind(Points, Teamz_Statz_N[training, vecbin]))
team_rpart_temp <- rpart(Points~., data = temp_matrix,   control = rpart.control(minbucket = 2))
assign(paste("team_rpart_temp", i, sep = ""), team_rpart_temp)
Points <- Points - predict(team_rpart_temp)
}
rez_fin <- 0
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
names(new_data) <- c("Points", Var_Exp)
rez_suivi <- numeric(m)
for (i in seq(m)){
rez_fin = rez_fin + predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
rez_suivi[i] <- rez_fin
}
i
predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
new.cars <- data.frame(wt=c(1.7, 2.4, 3.6))
new.cars
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
team_rpart_temp1
new_data
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
names(new_data) <- c("Points", Var_Exp)
new_data
predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
eval(parse(text = paste("team_rpart_temp", i, sep = "")))
temp_matrix <- data.frame(cbind(Points, Teamz_Statz_N[training, vecbin]))
temp_matrix
Teamz_Statz <- RM_NA_List_Stats_Teams[[12]][[2]]
Teamz_Statz_N <- apply(Teamz_Statz, 2, as.numeric)
Nb_Games_Played <- nrow(Teamz_Statz)
k_fold <- numeric(Nb_Games_Played)
testing <- 1
set.seed(0)
m <- 60
p <- 0.8
training <- seq(Nb_Games_Played)[-testing]
Points_ref <- as.numeric(Teamz_Statz[,"Points"])[-testing]
Points <- Points_ref
for(i in seq(m)){
vecbin <- sample(seq(length(Var_Exp)),rbinom(1, length(Var_Exp), p))
temp_matrix <- data.frame(cbind(Points, Teamz_Statz_N[training, vecbin]))
team_rpart_temp <- rpart(Points~., data = temp_matrix,   control = rpart.control(minbucket = 2))
assign(paste("team_rpart_temp", i, sep = ""), team_rpart_temp)
Points <- Points - predict(team_rpart_temp)
}
team_rpart_temp
team_rpart_temp1
temp_matrix
vecbin
Teamz_Statz_N[1]
Teamz_Statz_N[1,]
Teamz_Statz_N[,1]
Teamz_Statz_N <- apply(Teamz_Statz, 2, as.numeric)[,-1]
Nb_Games_Played <- nrow(Teamz_Statz)
k_fold <- numeric(Nb_Games_Played)
for(testing in seq(Nb_Games_Played)){
testing <- 1
set.seed(0)
m <- 60
p <- 0.8
training <- seq(Nb_Games_Played)[-testing]
Points_ref <- as.numeric(Teamz_Statz[,"Points"])[-testing]
Points <- Points_ref
for(i in seq(m)){
vecbin <- sample(seq(length(Var_Exp)),rbinom(1, length(Var_Exp), p))
temp_matrix <- data.frame(cbind(Points, Teamz_Statz_N[training, vecbin]))
team_rpart_temp <- rpart(Points~., data = temp_matrix,   control = rpart.control(minbucket = 2))
assign(paste("team_rpart_temp", i, sep = ""), team_rpart_temp)
Points <- Points - predict(team_rpart_temp)
}
rez_fin <- 0
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
names(new_data) <- c("Points", Var_Exp)
rez_suivi <- numeric(m)
for (i in seq(m)){
rez_fin = rez_fin + predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
rez_suivi[i] <- rez_fin
}
print(c(Teamz_Statz[,"Points"][testing],rez_fin))
plot(rez_suivi)
k_fold[testing] <- rez_fin
}
for(i in seq(nrow(City_Team_Sign))){
Teamz_Statz <- RM_NA_List_Stats_Teams[[i]][[2]]
Teamz_Statz_N <- apply(Teamz_Statz, 2, as.numeric)[,-1]
Nb_Games_Played <- nrow(Teamz_Statz)
k_fold <- numeric(Nb_Games_Played)
for(testing in seq(Nb_Games_Played)){
testing <- 1
set.seed(0)
m <- 60
p <- 0.8
training <- seq(Nb_Games_Played)[-testing]
Points_ref <- as.numeric(Teamz_Statz[,"Points"])[-testing]
Points <- Points_ref
for(i in seq(m)){
vecbin <- sample(seq(length(Var_Exp)),rbinom(1, length(Var_Exp), p))
temp_matrix <- data.frame(cbind(Points, Teamz_Statz_N[training, vecbin]))
team_rpart_temp <- rpart(Points~., data = temp_matrix,   control = rpart.control(minbucket = 2))
assign(paste("team_rpart_temp", i, sep = ""), team_rpart_temp)
Points <- Points - predict(team_rpart_temp)
}
rez_fin <- 0
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
names(new_data) <- c("Points", Var_Exp)
rez_suivi <- numeric(m)
for (i in seq(m)){
rez_fin = rez_fin + predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
rez_suivi[i] <- rez_fin
}
print(c(Teamz_Statz[,"Points"][testing],rez_fin))
plot(rez_suivi)
k_fold[testing] <- rez_fin
}
point_max <- max(as.numeric(RM_NA_List_Stats_Teams[[12]][[2]][,"Points"]),k_fold)
plot(as.numeric(RM_NA_List_Stats_Teams[[12]][[2]][,"Points"]),round(k_fold),xlim = c(0,point_max),ylim = c(0,point_max))
lines(c(0,100),c(0,100))
lines(c(0,100),c(0,100)-3,col = "blue");lines(c(0,100),c(0,100)+3,col = "blue")
lines(c(0,100),c(0,100)-8,col = "red");lines(c(0,100),c(0,100)+8,col = "red")
summary(Teamz_Statz[,"Points"] - k_fold)
}
for(i in seq(nrow(City_Team_Sign))){
Teamz_Statz <- RM_NA_List_Stats_Teams[[i]][[2]]
Teamz_Statz_N <- apply(Teamz_Statz, 2, as.numeric)[,-1]
Nb_Games_Played <- nrow(Teamz_Statz)
k_fold <- numeric(Nb_Games_Played)
for(testing in seq(Nb_Games_Played)){
set.seed(0)
m <- 60
p <- 0.8
training <- seq(Nb_Games_Played)[-testing]
Points_ref <- as.numeric(Teamz_Statz[,"Points"])[-testing]
Points <- Points_ref
for(i in seq(m)){
vecbin <- sample(seq(length(Var_Exp)),rbinom(1, length(Var_Exp), p))
temp_matrix <- data.frame(cbind(Points, Teamz_Statz_N[training, vecbin]))
team_rpart_temp <- rpart(Points~., data = temp_matrix,   control = rpart.control(minbucket = 2))
assign(paste("team_rpart_temp", i, sep = ""), team_rpart_temp)
Points <- Points - predict(team_rpart_temp)
}
rez_fin <- 0
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
names(new_data) <- c("Points", Var_Exp)
rez_suivi <- numeric(m)
for (i in seq(m)){
rez_fin = rez_fin + predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
rez_suivi[i] <- rez_fin
}
print(c(Teamz_Statz[,"Points"][testing],rez_fin))
plot(rez_suivi)
k_fold[testing] <- rez_fin
}
point_max <- max(as.numeric(RM_NA_List_Stats_Teams[[12]][[2]][,"Points"]),k_fold)
plot(as.numeric(RM_NA_List_Stats_Teams[[12]][[2]][,"Points"]),round(k_fold),xlim = c(0,point_max),ylim = c(0,point_max))
lines(c(0,100),c(0,100))
lines(c(0,100),c(0,100)-3,col = "blue");lines(c(0,100),c(0,100)+3,col = "blue")
lines(c(0,100),c(0,100)-8,col = "red");lines(c(0,100),c(0,100)+8,col = "red")
summary(Teamz_Statz[,"Points"] - k_fold)
}
i <- 12
Teamz_Statz <- RM_NA_List_Stats_Teams[[i]][[2]]
Teamz_Statz_N <- apply(Teamz_Statz, 2, as.numeric)[,-1]
Nb_Games_Played <- nrow(Teamz_Statz)
k_fold <- numeric(Nb_Games_Played)
k_fold
for(testing in seq(Nb_Games_Played)){
set.seed(0)
m <- 60
p <- 0.8
training <- seq(Nb_Games_Played)[-testing]
Points_ref <- as.numeric(Teamz_Statz[,"Points"])[-testing]
Points <- Points_ref
for(i in seq(m)){
vecbin <- sample(seq(length(Var_Exp)),rbinom(1, length(Var_Exp), p))
temp_matrix <- data.frame(cbind(Points, Teamz_Statz_N[training, vecbin]))
team_rpart_temp <- rpart(Points~., data = temp_matrix,   control = rpart.control(minbucket = 2))
assign(paste("team_rpart_temp", i, sep = ""), team_rpart_temp)
Points <- Points - predict(team_rpart_temp)
}
rez_fin <- 0
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
names(new_data) <- c("Points", Var_Exp)
rez_suivi <- numeric(m)
for (i in seq(m)){
rez_fin = rez_fin + predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
rez_suivi[i] <- rez_fin
}
print(c(Teamz_Statz[,"Points"][testing],rez_fin))
plot(rez_suivi)
k_fold[testing] <- rez_fin
}
point_max <- max(as.numeric(RM_NA_List_Stats_Teams[[12]][[2]][,"Points"]),k_fold)
plot(as.numeric(RM_NA_List_Stats_Teams[[12]][[2]][,"Points"]),round(k_fold),xlim = c(0,point_max),ylim = c(0,point_max))
lines(c(0,100),c(0,100))
lines(c(0,100),c(0,100)-3,col = "blue");lines(c(0,100),c(0,100)+3,col = "blue")
lines(c(0,100),c(0,100)-8,col = "red");lines(c(0,100),c(0,100)+8,col = "red")
k_fold
list(k_fold)
append(list(k_fold), list(k_fold))
for(i in seq(nrow(City_Team_Sign))){
Teamz_Statz <- RM_NA_List_Stats_Teams[[i]][[2]]
Teamz_Statz_N <- apply(Teamz_Statz, 2, as.numeric)[,-1]
Nb_Games_Played <- nrow(Teamz_Statz)
k_fold <- numeric(Nb_Games_Played)
for(testing in seq(Nb_Games_Played)){
set.seed(0)
m <- 60
p <- 0.8
training <- seq(Nb_Games_Played)[-testing]
Points_ref <- as.numeric(Teamz_Statz[,"Points"])[-testing]
Points <- Points_ref
for(i in seq(m)){
vecbin <- sample(seq(length(Var_Exp)),rbinom(1, length(Var_Exp), p))
temp_matrix <- data.frame(cbind(Points, Teamz_Statz_N[training, vecbin]))
team_rpart_temp <- rpart(Points~., data = temp_matrix,   control = rpart.control(minbucket = 2))
assign(paste("team_rpart_temp", i, sep = ""), team_rpart_temp)
Points <- Points - predict(team_rpart_temp)
}
rez_fin <- 0
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
names(new_data) <- c("Points", Var_Exp)
rez_suivi <- numeric(m)
for (i in seq(m)){
rez_fin = rez_fin + predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
rez_suivi[i] <- rez_fin
}
print(c(Teamz_Statz[,"Points"][testing],rez_fin))
plot(rez_suivi)
k_fold[testing] <- rez_fin
}
append(list(k_fold), list(k_fold))
}
k_fold
test
test <- append(test, list(k_fold))
test <- list(NULL)
test <- append(test, list(k_fold))
test
for(i in seq(nrow(City_Team_Sign))){
Teamz_Statz <- RM_NA_List_Stats_Teams[[i]][[2]]
Teamz_Statz_N <- apply(Teamz_Statz, 2, as.numeric)[,-1]
Nb_Games_Played <- nrow(Teamz_Statz)
k_fold <- numeric(Nb_Games_Played)
for(testing in seq(Nb_Games_Played)){
set.seed(0)
m <- 20
p <- 0.8
training <- seq(Nb_Games_Played)[-testing]
Points_ref <- as.numeric(Teamz_Statz[,"Points"])[-testing]
Points <- Points_ref
for(i in seq(m)){
vecbin <- sample(seq(length(Var_Exp)),rbinom(1, length(Var_Exp), p))
temp_matrix <- data.frame(cbind(Points, Teamz_Statz_N[training, vecbin]))
team_rpart_temp <- rpart(Points~., data = temp_matrix,   control = rpart.control(minbucket = 2))
assign(paste("team_rpart_temp", i, sep = ""), team_rpart_temp)
Points <- Points - predict(team_rpart_temp)
}
rez_fin <- 0
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
names(new_data) <- c("Points", Var_Exp)
rez_suivi <- numeric(m)
for (i in seq(m)){
rez_fin = rez_fin + predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
rez_suivi[i] <- rez_fin
}
print(c(Teamz_Statz[,"Points"][testing],rez_fin))
plot(rez_suivi)
k_fold[testing] <- rez_fin
}
test <- list(NULL)
test <- append(test, list(k_fold))
}
test
for(testing in seq(Nb_Games_Played)){
set.seed(0)
m <- 20
p <- 0.8
training <- seq(Nb_Games_Played)[-testing]
Points_ref <- as.numeric(Teamz_Statz[,"Points"])[-testing]
Points <- Points_ref
for(i in seq(m)){
vecbin <- sample(seq(length(Var_Exp)),rbinom(1, length(Var_Exp), p))
temp_matrix <- data.frame(cbind(Points, Teamz_Statz_N[training, vecbin]))
team_rpart_temp <- rpart(Points~., data = temp_matrix,   control = rpart.control(minbucket = 2))
assign(paste("team_rpart_temp", i, sep = ""), team_rpart_temp)
Points <- Points - predict(team_rpart_temp)
}
rez_fin <- 0
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
names(new_data) <- c("Points", Var_Exp)
rez_suivi <- numeric(m)
for (i in seq(m)){
rez_fin = rez_fin + predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
rez_suivi[i] <- rez_fin
}
print(c(Teamz_Statz[,"Points"][testing],rez_fin))
plot(rez_suivi)
k_fold[testing] <- rez_fin
}
i
Teamz_Statz <- RM_NA_List_Stats_Teams[[i]][[2]]
Teamz_Statz_N <- apply(Teamz_Statz, 2, as.numeric)[,-1]
Nb_Games_Played <- nrow(Teamz_Statz)
k_fold <- numeric(Nb_Games_Played)
for(testing in seq(Nb_Games_Played)){
set.seed(0)
m <- 20
p <- 0.8
training <- seq(Nb_Games_Played)[-testing]
Points_ref <- as.numeric(Teamz_Statz[,"Points"])[-testing]
Points <- Points_ref
for(i in seq(m)){
vecbin <- sample(seq(length(Var_Exp)),rbinom(1, length(Var_Exp), p))
temp_matrix <- data.frame(cbind(Points, Teamz_Statz_N[training, vecbin]))
team_rpart_temp <- rpart(Points~., data = temp_matrix,   control = rpart.control(minbucket = 2))
assign(paste("team_rpart_temp", i, sep = ""), team_rpart_temp)
Points <- Points - predict(team_rpart_temp)
}
rez_fin <- 0
new_data <- data.frame(t(as.numeric(Teamz_Statz[testing,])))
names(new_data) <- c("Points", Var_Exp)
rez_suivi <- numeric(m)
for (i in seq(m)){
rez_fin = rez_fin + predict(eval(parse(text = paste("team_rpart_temp", i, sep = ""))), newdata = new_data)
rez_suivi[i] <- rez_fin
}
print(c(Teamz_Statz[,"Points"][testing],rez_fin))
plot(rez_suivi)
k_fold[testing] <- rez_fin
}
point_max <- max(as.numeric(RM_NA_List_Stats_Teams[[12]][[2]][,"Points"]),k_fold)
plot(as.numeric(RM_NA_List_Stats_Teams[[12]][[2]][,"Points"]),round(k_fold),xlim = c(0,point_max),ylim = c(0,point_max))
lines(c(0,100),c(0,100))
lines(c(0,100),c(0,100)-3,col = "blue");lines(c(0,100),c(0,100)+3,col = "blue")
lines(c(0,100),c(0,100)-8,col = "red");lines(c(0,100),c(0,100)+8,col = "red")
summary(Teamz_Statz[,"Points"] - k_fold)
Points_ref
point_max <- max(as.numeric(RM_NA_List_Stats_Teams[[i]][[2]][,"Points"]),k_fold)
plot(as.numeric(RM_NA_List_Stats_Teams[[i]][[2]][,"Points"]),round(k_fold),xlim = c(0,point_max),ylim = c(0,point_max))
lines(c(0,100),c(0,100))
lines(c(0,100),c(0,100)-3,col = "blue");lines(c(0,100),c(0,100)+3,col = "blue")
lines(c(0,100),c(0,100)-8,col = "red");lines(c(0,100),c(0,100)+8,col = "red")
summary(Points_ref - k_fold)
