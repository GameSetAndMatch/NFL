max(exp(predict(fit_alpha0, data.imputed[959,-3])[2,]))
max(exp(predict(fit_alpha0, data.imputed[959,-3])[,1]))
exp(predict(fit_alpha0, data.imputed[959,-3])[,1])
exp(predict(fit_alpha0, data.imputed[959,-3])[,2])
exp(predict(fit_alpha0, data.imputed[959,-3])[,3])
which.max(exp(predict(fit_alpha0, data.imputed[959,-3])[,3]))
which.max(exp(predict(fit_alpha0, data.imputed[959,-3])[1,]))
log(10000)
which.max(exp(predict(fit_alpha0, data.imputed[,3])[1,]))
mean(data.imputed[,3])
mean(data.imputed[-960,3])
mean(data.imputed[-959,3])
data.imputed[-959,3]
mean(unlist(data.imputed[-959,3]))
listeLambda
listeLambda[10000]
listeLambda[9999]
listeLambda[9998]
glm_elasticnet_alpha0_cvfit$lambda[1]
glm_elasticnet_alpha0_cvfit$lambda[length(glm_elasticnet_alpha0_cvfit$lambda)]
fit_alpha0 <- glmnetUtils::glmnet(Points~., data = Data[-959,], family = "poisson", alpha = 0, lambda = 0.1)
plot(fit_alpha0, xvar = "lambda", label = "T")
exp(predict(fit_alpha0, data.imputed[959,-3])[1,1])
fit_alpha0 <- glmnetUtils::glmnet(Points~., data = Data[-959,], family = "poisson", alpha = 0, lambda = 0.00001)
plot(fit_alpha0, xvar = "lambda", label = "T")
exp(predict(fit_alpha0, data.imputed[959,-3])[1,1])
fit_alpha0 <- glmnetUtils::glmnet(Points~., data = Data[-959,], family = "poisson", alpha = 1, lambda = 0.00001)
glm_elasticnet_alpha0_cvfit <- glmnetUtils::cv.glmnet(Points~., data = Data[-959,], family = "poisson", alpha = 1)
listeLambda <- seq(glm_elasticnet_alpha0_cvfit$lambda[1], glm_elasticnet_alpha0_cvfit$lambda[length(glm_elasticnet_alpha0_cvfit$lambda)], length = 10000)
fit_alpha0 <- glmnetUtils::glmnet(Points~., data = Data[-959,], family = "poisson", alpha = 1, lambda = 0.00001)
plot(fit_alpha0, xvar = "lambda", label = "T")
exp(predict(fit_alpha0, data.imputed[959,-3])[1,1])
exp(predict(fit_alpha0, data.imputed[959,-3])[1,1], link = "logLink" )
predict(fit_alpha0, data.imputed[959,-3])[1,1], link = "logLink" )
exp(predict(fit_alpha0, data.imputed[959,-3])[1,1], type = "Link" )
Sample_test<- (min_game:max_game)
Sample_test
min_game <- 481
max_game <- 485
nb_model <- 5
ntry <- length(min_game:max_game)
Result <- matrix(numeric(ntry *nb_model), ncol =nb_model)
colnames(Result) <- c("Actual Value", "LM", "GLM POIS", "GLM NBIN", "GLM RIDGE",  "GLM LASSO","MissRF")
Result
Sample_test<- (min_game:max_game)
Sample_test
i <- 1
Rm <- Sample_test[i]
Rm
(Rm+1)
Data <- Data_test[-((Rm+1):960),]
Data
Data <- Data_test[-((Rm):960),]
Data
(min(960, (Rm+1)):960)
960:960
View(base.fre)
##import base.donneesa
data(fremotor1freq0304a)
data(fremotor1prem0304a)
base.fre<-fremotor1freq0304a
base.prem<-fremotor1prem0304a
View(base.fre)
##data summary
summary(base.prem)
#missing data: MartialStatus and JobCode
summary(base.fre)
##processing data
nrow(unique(base.fre)) #64234
nrow(unique(base.prem)) #51949
#creat ID contain IDpol & Year
base.fre$ID<-paste(base.fre$IDpol,base.fre$Year,sep="")
base.prem$ID<-paste(base.prem$IDpol,base.prem$Year,sep="")
length(unique(base.fre$IDpol)) #32117
length(unique(base.prem$IDpol)) #32117
length(unique(base.fre$ID)) #64234
length(unique(base.prem$ID)) #51943
length(which(unique(base.fre$IDpol) %in% unique(base.prem$IDpol)))
#same number of contracts (32117) in both fre and prem data, only 6 duplicated in prem base.donneesa
IDduplicated<-base.prem[which(duplicated(base.prem$ID)==TRUE),"ID"]
base.prem[which(base.prem$ID %in% IDduplicated),]
#they are not duplicated errors but it seems because of the half-yearly contracts, 2 contracts on 1 year, same person (only 2 have difference MaritalStatus and JobCode) but difference premium. We consider the frequence model so we remove the duplicated.
base.prem<-base.prem[-which(duplicated(base.prem$ID)==TRUE),]
base.donnees.final<-merge(x=base.prem,y=base.fre,by.x="ID",by.y="ID",all.x=TRUE)
base.donnees.final$IDpol.x<-base.donnees.final$Year.x<-base.donnees.final$MaritalStatus<-base.donnees.final$JobCode<-NULL
base.donnees<-base.donnees.final # data for TPL model
View(base.donnees)
Fire <- glm(Fire, data=base_appren,poisson(link=log))
base_appren
Fire <- glm(Fire, data=base_appren,poisson(link=log))
Fire <- glm(Fire~., data=base_appren,poisson(link=log))
nrow(base_appren)
?gc
AC_DrivAge
library(CASdatasets)
library(rpart)
library(rpart.plot)
library(ggplot2)
library(pscl)
library(MASS)
##import base.donneesa
data(fremotor1freq0304a)
data(fremotor1prem0304a)
base.fre<-fremotor1freq0304a
base.prem<-fremotor1prem0304a
##data summary
summary(base.prem)
#missing data: MartialStatus and JobCode
summary(base.fre)
##processing data
nrow(unique(base.fre)) #64234
nrow(unique(base.prem)) #51949
#creat ID contain IDpol & Year
base.fre$ID<-paste(base.fre$IDpol,base.fre$Year,sep="")
base.prem$ID<-paste(base.prem$IDpol,base.prem$Year,sep="")
length(unique(base.fre$IDpol)) #32117
length(unique(base.prem$IDpol)) #32117
length(unique(base.fre$ID)) #64234
length(unique(base.prem$ID)) #51943
length(which(unique(base.fre$IDpol) %in% unique(base.prem$IDpol)))
#same number of contracts (32117) in both fre and prem data, only 6 duplicated in prem base.donneesa
IDduplicated<-base.prem[which(duplicated(base.prem$ID)==TRUE),"ID"]
base.prem[which(base.prem$ID %in% IDduplicated),]
#they are not duplicated errors but it seems because of the half-yearly contracts, 2 contracts on 1 year, same person (only 2 have difference MaritalStatus and JobCode) but difference premium. We consider the frequence model so we remove the duplicated.
base.prem<-base.prem[-which(duplicated(base.prem$ID)==TRUE),]
base.donnees.final<-merge(x=base.prem,y=base.fre,by.x="ID",by.y="ID",all.x=TRUE)
base.donnees.final$IDpol.x<-base.donnees.final$Year.x<-base.donnees.final$MaritalStatus<-base.donnees.final$JobCode<-NULL
base.donnees<-base.donnees.final[base.donnees.final$PremFire!=0,] # data for Fire model
## DrivAge
AC_DrivAge= aggregate(base.donnees$Fire, by=list(base.donnees$DrivAge), mean)
plot(x = AC_DrivAge$Group.1 , y = AC_DrivAge$x, xlab = "Driver Age", ylab = "Average Claim Number", typ='l', main="Driver Age")
DrivAge.Fire<-rpart(Fire~DrivAge, data = base.donnees,
control = rpart.control(minsplit = 1, minbucket = 1, cp = 2.244254e-05 , maxcompete = 2, xval = 5))
rpart.plot(DrivAge.Fire)
base.donnees$DrivAgeGLM<-cut(base.donnees$DrivAge, c(18,20,46,54,57,63,Inf),include.lowest = TRUE)
AC_DrivAge= aggregate(base.donnees$Fire, by=list(base.donnees$DrivAgeGLM), mean)
plot(x = AC_DrivAge$Group.1 , y = AC_DrivAge$x, xlab = "Driver Age", ylab = "Average Claim Number", typ='l', main="Vehicle Age")
base.donnees$DrivAgeGLM <- as.factor(base.donnees$DrivAgeGLM)
base.donnees[,"DrivAgeGLM"] <-relevel(base.donnees[,"DrivAgeGLM"], ref="[18,20]")
table(base.donnees$DrivAgeGLM)
## VehAge
AC_VehAge= aggregate(base.donnees$Fire, by=list(base.donnees$VehAge), mean)
plot(x = AC_VehAge$Group.1 , y = AC_VehAge$x, xlab = "Vehicle Age", ylab = "Average Claim Number", typ='l', main="Vehicle Age")
VehAge.Fire<-rpart(Fire~VehAge, data = base.donnees,
control = rpart.control(minsplit = 1, minbucket = 1, cp = 1.973112e-05 , maxcompete = 2, xval = 5))
rpart.plot(VehAge.Fire)
base.donnees$VehAgeGLM<-cut(base.donnees$VehAge, c(0,1,3,10,13,Inf),include.lowest = TRUE)
AC_VehAge= aggregate(base.donnees$Fire, by=list(base.donnees$VehAgeGLM), mean)
plot(x = AC_VehAge$Group.1 , y = AC_VehAge$x, xlab = "Vehicle Age", ylab = "Average Claim Number", typ='l', main="Vehicle Age")
base.donnees$VehAgeGLM <- as.factor(base.donnees$VehAgeGLM)
base.donnees[,"VehAgeGLM"] <-relevel(base.donnees[,"VehAgeGLM"], ref="(13,Inf]")
## BonusMalus
AC_BonusMalus= aggregate(base.donnees$Fire, by=list(base.donnees$BonusMalus), mean)
plot(x = AC_BonusMalus$Group.1 , y = AC_BonusMalus$x, xlab = "BonusMalus", ylab = "Average Claim Number", typ='l', main="BonusMalus")
BonusMalus.Fire<-rpart(Fire~BonusMalus, data = base.donnees,
control = rpart.control(minsplit = 1, minbucket = 1, cp = 4.646416e-05 , maxcompete = 2, xval = 5))
rpart.plot(BonusMalus.Fire)
base.donnees$BonusMalusGLM<-cut(base.donnees$BonusMalus, c(0,96,107,Inf),include.lowest = TRUE)
AC_BonusMalusGLM= aggregate(base.donnees$Fire, by=list(base.donnees$BonusMalusGLM), mean)
plot(x = AC_BonusMalusGLM$Group.1 , y = AC_BonusMalusGLM$x, xlab = "Vehicle Age", ylab = "Average Claim Number", typ='l', main="Vehicle Age")
base.donnees[,"BonusMalusGLM"] <-relevel(base.donnees[,"BonusMalusGLM"], ref="(96,107]")
## LicenceNb
table(base.donnees$LicenceNb)
FLicenceNb_Fire <- tapply(base.donnees$Fire, base.donnees$LicenceNb, mean)
(LicenceNb_Fire <- data.frame(LicenceNb = names(FLicenceNb_Fire), AverageFrequency = FLicenceNb_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(LicenceNb_Fire, aes(LicenceNb, AverageFrequency, fill = LicenceNb)) + geom_bar(stat = "identity")
base.donnees$LicenceNbGLM<-as.character(base.donnees$LicenceNb)
base.donnees$LicenceNbGLM[which(base.donnees$LicenceNbGLM %in% c("1","2","3"))]="123"
base.donnees$LicenceNbGLM<-as.factor(base.donnees$LicenceNbGLM)
base.donnees$LicenceNbGLM<-relevel(base.donnees$LicenceNbGLM, ref = "5")
## Payfreq
table(base.donnees$PayFreq)
FPayFreq_Fire <- tapply(base.donnees$Fire, base.donnees$PayFreq, mean)
(PayFreq_Fire <- data.frame(PayFreq = names(FPayFreq_Fire), AverageFrequency = FPayFreq_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(PayFreq_Fire, aes(PayFreq, AverageFrequency, fill = PayFreq)) + geom_bar(stat = "identity")
base.donnees$PayFreqGLM<-as.factor(base.donnees$PayFreq)
base.donnees$PayFreqGLM<-relevel(base.donnees$PayFreqGLM, ref = "Monthly")
## VehClass
FVehClass_Fire <- tapply(base.donnees$Fire, base.donnees$VehClass, mean)
(VehClass_Fire <- data.frame(VehClass = names(FVehClass_Fire), AverageFrequency = FVehClass_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(VehClass_Fire, aes(VehClass, AverageFrequency, fill = VehClass)) + geom_bar(stat = "identity")
base.donnees$VehClassGLM<-as.factor(base.donnees$VehClass)
base.donnees$VehClassGLM<-relevel(base.donnees$VehClassGLM, ref = "Most expensive")
## VehPower
FVehPower_Fire <- tapply(base.donnees$Fire, base.donnees$VehPower, mean)
(VehPower_Fire <- data.frame(VehPower = names(FVehPower_Fire), AverageFrequency = FVehPower_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(VehPower_Fire, aes(VehPower, AverageFrequency, fill = VehPower)) + geom_bar(stat = "identity")
base.donnees$VehPowerGLM<-as.factor(base.donnees$VehPower)
base.donnees$VehPowerGLM<-relevel(base.donnees$VehPowerGLM, ref = "P2")
table(base.donnees$VehPowerGLM)
## Area
FArea_Fire <- tapply(base.donnees$Fire, base.donnees$Area, mean)
(Area_Fire <- data.frame(Area = names(FArea_Fire), AverageFrequency = FArea_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(Area_Fire, aes(Area, AverageFrequency, fill = Area)) + geom_bar(stat = "identity")
base.donnees$AreaGLM<-as.factor(base.donnees$AreaGLM)
base.donnees$AreaGLM<-relevel(base.donnees$AreaGLM, ref = "A10")
table(base.donnees$AreaGLM)
## Region
FRegion_Fire <- tapply(base.donnees$Fire, base.donnees$Region, mean)
(Region_Fire <- data.frame(Region = names(FRegion_Fire), Frequency = FRegion_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(Region_Fire, aes(Region, Frequency, fill = Region)) + geom_bar(stat = "identity")
base.donnees$RegionGLM<-as.factor(base.donnees$Region)
base.donnees$RegionGLM<-relevel(base.donnees$RegionGLM, ref = "Headquarters")
## VehUsage
FVehUsage_Fire <- tapply(base.donnees$Fire, base.donnees$VehUsage, mean)
(VehUsage_Fire <- data.frame(VehUsage = names(FVehUsage_Fire), Frequency = FVehUsage_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(VehUsage_Fire, aes(VehUsage, Frequency, fill = VehUsage)) + geom_bar(stat = "identity")
base.donnees$VehUsageGLM<-as.factor(base.donnees$VehUsage)
base.donnees$VehUsageGLM<-relevel(base.donnees$VehUsageGLM, ref = "Professional run")
##Garage
FGarage_Fire <- tapply(base.donnees$Fire, base.donnees$Garage, mean)
(Garage_Fire <- data.frame(Garage = names(FGarage_Fire), Frequency = FGarage_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(Garage_Fire, aes(Garage, Frequency, fill = Garage)) + geom_bar(stat = "identity")
base.donnees$GarageGLM= as.factor(base.donnees$Garage)
set.seed(100)
#_______________Tirage aleatoire sans stratification 2/3 des assures d'un cote, et 1/3 de l'autre______________#
(taille_echan <- floor( (4/5) * nrow(base.donnees) ))
ech.appren_indexes <- sample(seq_len(nrow(base.donnees)), size = taille_echan)
base_appren <- base.donnees[ech.appren_indexes, ]
base_vali <- base.donnees[-ech.appren_indexes, ]
baseauto_appren.origine <- base_appren
baseauto_vali.origine <- base_vali
m1<-glm(Fire~DrivAgeGLM+BonusMalusGLM
+PayFreqGLM+VehAgeGLM+VehGas
+VehUsageGLM+GarageGLM+RegionGLM+Channel,data=base_appren,poisson(link=log))
summary(m1)
Fire.freq.model<-stepAIC(m1,direction="backward")
summary(Fire.freq.model)
####### Prevision #######
poisson.predict_valid <- predict(Fire.freq.model, newdata = base_vali, type = "response")
round(summary(base.donnees$Fire), 4)			# mean = 0,0591
round(summary(poisson.predict_valid), 4)					# mean = 0,0597
## On va travailler maintenant prevoir sur l'ensemble de la base.
poisson.predict <- predict(Fire.freq.model, newdata = base.donnees, type = "response")
round(summary(base.donnees$Fire), 6)				# mean = 0,05905
round(summary(poisson.predict), 6)	      # mean = 0,05941
plot(poisson.predict)
round(summary(base.donnees$Fire), 4)			# mean = 0,0018
round(summary(poisson.predict_valid), 4)					# mean = 0,0597
round(summary(base.donnees$Fire), 6)				# mean = 0,05905
round(summary(base.donnees$Fire), 6)				# mean = 0,05905
round(summary(poisson.predict), 6)	      # mean = 0,05941
predict(glm_pois, newdata = data.imputed[Rm,-3])
# belhumeurolivier@gmail.com
path_base <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(path_base)
# Libraries ###################################################################################
source("NFL_Packages.R")
# Base Infos ##################################################################################
source("NFL_Base_Info.R")
# NFL Web Scraping ############################################################################
source("NFL_Functions.R")
# Predict Scores ##############################################################################
Data_NFL <- Stat_UTD(Save_RDS = T)
Data_Team_Szn <- Data_NFL[[1]]
Data_Szn_Week <- Data_NFL[[2]]
# Format Data #################################################################################
C_Data_Team_Szn <- lapply(seq(32), function(Team) lapply(seq(2), function(Szn) cbind(Data_Team_Szn[[Team]][[Szn]][,1:10], apply(Data_Team_Szn[[Team]][[Szn]][,11:20],2,GMCM:::cummean))))
for(Team in seq(length(Complete_Names))){
for(Szn in seq(length(C_Data_Team_Szn[[1]]))){
colnames(C_Data_Team_Szn[[Team]][[Szn]]) <- c(colnames(Data_Team_Szn[[1]][[1]])[1:10], sprintf("C_%s",  colnames(Data_Team_Szn[[1]][[1]])[11:20]))
}
}
SZN_Games <- lapply(seq(2), function(Szn) do.call("rbind", Data_Szn_Week[[Szn]]))
All_games <- do.call("rbind", SZN_Games)
# Rank----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Ranking_Stats_Szn <-unlist(list(lapply((sprintf("C_%s",  colnames(Data_Team_Szn[[1]][[1]])[11:15])),
function(Stats) lapply(seq(2),
function(Szn) t(do.call("rbind",lapply(seq(16), function(Week)
33 - as.numeric(rank(unlist(sapply(seq(32),
function(Team) C_Data_Team_Szn[[Team]][[Szn]][[Stats]][Week])), ties.method = "average"))))))),
lapply((sprintf("C_%s",  colnames(Data_Team_Szn[[1]][[1]])[16:20])),
function(Stats) lapply(seq(2),
function(Szn) t(do.call("rbind",lapply(seq(16), function(Week)
as.numeric(rank(unlist(sapply(seq(32),
function(Team) C_Data_Team_Szn[[Team]][[Szn]][[Stats]][Week])), ties.method = "average" ) ))))))), recursive = F)
# Cumulative Ranking----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Ranking_Team_Szn <- lapply(seq(32), function(Team) lapply(seq(2), function(Szn) t(do.call("rbind", lapply(seq(length(Ranking_Stats_Szn)), function(Stats)  Ranking_Stats_Szn[[Stats]][[Szn]][Team,])))))
C_Ranking_Team_Szn <- lapply(seq(32), function(Team) lapply(seq(2), function(Szn) t(do.call("rbind", lapply(seq(length(Ranking_Stats_Szn)), function(Stats)  GMCM:::cummean(Ranking_Stats_Szn[[Stats]][[Szn]][Team,]))))))
Rank_E_Team_Szn <- lapply(seq(32), function(Team) lapply(seq(2), function(Szn) do.call("rbind",  lapply(seq(16),
function(Week) C_Ranking_Team_Szn[[as.numeric(Data_Team_Szn[[Team]][[Szn]]$Rang_Alpha_VS)[Week]]][[Szn]][Week,]))))
C_Rank_E_Team_Szn <- lapply(seq(32), function(Team) lapply(seq(2), function(Szn) apply(Rank_E_Team_Szn[[Team]][[Szn]],2,GMCM:::cummean)))
for(Team in seq(32)){
for(Szn in seq(2)){
colnames(Ranking_Team_Szn[[Team]][[Szn]]) <- sprintf("Rank_%s",  colnames(Data_Team_Szn[[1]][[1]])[11:20])
colnames(C_Ranking_Team_Szn[[Team]][[Szn]]) <- sprintf("C_Rank_%s",  colnames(Data_Team_Szn[[1]][[1]])[11:20])
colnames(Rank_E_Team_Szn[[Team]][[Szn]]) <- sprintf("Rank_E_%s",  colnames(Data_Team_Szn[[1]][[1]])[11:20])
colnames(C_Rank_E_Team_Szn[[Team]][[Szn]]) <- sprintf("C_Rank_E_%s",  colnames(Data_Team_Szn[[1]][[1]])[11:20])
}
}
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DataRank_Team_Szn <- lapply(seq(32), function(Team) lapply(seq(2), function(Szn) cbind(Data_Team_Szn[[Team]][[Szn]], Ranking_Team_Szn[[Team]][[Szn]], Rank_E_Team_Szn[[Team]][[Szn]])))
C_DataRank_Team_Szn <- lapply(seq(32), function(Team) lapply(seq(2), function(Szn) cbind(C_Data_Team_Szn[[Team]][[Szn]], C_Ranking_Team_Szn[[Team]][[Szn]], C_Rank_E_Team_Szn[[Team]][[Szn]])))
Total_Games_Szn_Data <- lapply(seq(2), function(Szn) do.call("rbind", lapply(seq(32), function(Team) DataRank_Team_Szn[[Team]][[Szn]])))
Total_Games_Szn_C.Data <- lapply(seq(2), function(Szn) do.call("rbind", lapply(seq(32), function(Team) C_DataRank_Team_Szn[[Team]][[Szn]])))
Total_Games_Rank_C.Rank <- lapply(seq(2), function(Szn)lapply(seq(32), function(Team) merge(DataRank_Team_Szn[[Team]][[Szn]], C_DataRank_Team_Szn[[Team]][[Szn]])))
C_E_Stat_Szn_Team <- lapply(seq(2), function(Szn) lapply(seq(32), function(Team) t(sapply(seq(15), function(Games)  Total_Games_Rank_C.Rank[[Szn]][[as.numeric(unlist(Total_Games_Rank_C.Rank[[Szn]][[Team]][,7]))[(Games+1)]]][Games,41:50]))))
for(Szn in seq(2)){
for(Team in seq(32)){
colnames(C_E_Stat_Szn_Team[[Szn]][[Team]]) <- paste("C_E", substr(colnames(C_E_Stat_Szn_Team[[Szn]][[Team]]),2, 20), sep = "")
}
}
Decal_Total_wo_order_Szn_Team <- lapply(seq(2), function(Szn) lapply(seq(32), function(Team) cbind(Total_Games_Rank_C.Rank[[Szn]][[Team]][2:16, c(6, 11:20)], Total_Games_Rank_C.Rank[[Szn]][[Team]][1:15, -c(6,11:20)], C_E_Stat_Szn_Team[[Szn]][[Team]])))
Decal_Total_Szn_Team <- lapply(seq(2), function(Szn) lapply(seq(32), function(Team) Decal_Total_wo_order_Szn_Team[[Szn]][[Team]][,c("Game_Nb", "Team_Abb", "Rang_Alpha","Team_Abb_VS", "Rang_Alpha_VS",
"Outcome", "Points",
"Points_VS", "Yards", "FirstDowns", "Int", "Fum", "Yards_VS",  "FirstDowns_VS",  "Int_VS", "Fum_VS","HomeField",
"C_Points", "C_Yards", "C_FirstDowns", "C_Int",  "C_Fum",
"C_Points_VS", "C_Yards_VS","C_FirstDowns_VS", "C_Int_VS", "C_Fum_VS",
"C_E_Points", "C_E_Yards", "C_E_FirstDowns","C_E_Int", "C_E_Fum",
"C_E_Points_VS", "C_E_Yards_VS", "C_E_FirstDowns_VS", "C_E_Int_VS", "C_E_Fum_VS",
"Rank_Points", "Rank_Yards", "Rank_FirstDowns", "Rank_Int", "Rank_Fum",
"Rank_Points_VS", "Rank_Yards_VS", "Rank_FirstDowns_VS", "Rank_Int_VS", "Rank_Fum_VS",
"Rank_E_Points", "Rank_E_Yards", "Rank_E_FirstDowns",  "Rank_E_Int", "Rank_E_Fum",
"Rank_E_Points_VS", "Rank_E_Yards_VS", "Rank_E_FirstDowns_VS", "Rank_E_Int_VS", "Rank_E_Fum_VS",
"C_Rank_Points", "C_Rank_Yards", "C_Rank_FirstDowns", "C_Rank_Int", "C_Rank_Fum",
"C_Rank_Points_VS", "C_Rank_Yards_VS","C_Rank_FirstDowns_VS", "C_Rank_Int_VS", "C_Rank_Fum_VS",
"C_Rank_E_Points", "C_Rank_E_Yards", "C_Rank_E_FirstDowns", "C_Rank_E_Int", "C_Rank_E_Fum",
"C_Rank_E_Points_VS", "C_Rank_E_Yards_VS", "C_Rank_E_FirstDowns_VS", "C_Rank_E_Int_VS", "C_Rank_E_Fum_VS")]))
for(Szn in seq(2)){
for(Team in seq(32)){
Decal_Total_Szn_Team[[Szn]][[Team]]$Game_Nb <- Decal_Total_Szn_Team[[Szn]][[Team]]$Game_Nb+1
}
}
#Cant_Know_Before_Or_Useless <- c("Rang_Alpha", "Rang_Alpha_VS", "Outcome", "Yards", "FirstDowns", "Int", "Fum", "Points_VS", "Yards_VS", "FirstDowns_VS", "Int_VS", "Fum_VS")
Cant_Know_Before_Or_Useless <- c("Rang_Alpha", "Rang_Alpha_VS", "Outcome")
Test_V_KB_Total_Szn_Team <- lapply(seq(2), function(Szn) lapply(seq(32), function(Team) Decal_Total_Szn_Team[[Szn]][[Team]][,-..Cant_Know_Before_Or_Useless]))
Total_Decal_2018 <- do.call("rbind", Test_V_KB_Total_Szn_Team[[1]])
Total_Decal_2019 <- do.call("rbind", Test_V_KB_Total_Szn_Team[[2]])
Total_Decal <- rbind(Total_Decal_2018, Total_Decal_2019)
# LM ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Data_test <- cbind(Total_Decal[,c(2:3)],apply(as.matrix(Total_Decal[,-c(1:3)]), 2, as.numeric) )
Data_test$Team_Abb <- as.factor(Data_test$Team_Abb)
Data_test$Team_Abb_VS <- as.factor(Data_test$Team_Abb_VS)
Data_test$HomeField <- as.factor(Data_test$HomeField)
min_game <- 481
max_game <- 485
nb_model <- 5
ntry <- length(min_game:max_game)
Result <- matrix(numeric(ntry *nb_model), ncol =nb_model)
colnames(Result) <- c("Actual Value", "LM", "GLM POIS", "GLM NBIN","MissRF")
Sample_test<- (min_game:max_game)
for(i in seq(ntry)){
Rm <- Sample_test[i]
Data <- Data_test[-(min(960, (Rm+1)):960),]
lm_mod <- lm(Points~., data = Data[-Rm,])
glm_pois <- glm(Points~., data = Data[-Rm,], family = "poisson")
glm_nbin <- glm.nb(Points~., data = Data[-Rm,])
#glm_elasticnet <- glmnetUtils::cv.glmnet(Points~., data = Data[-Rm,], family = "poisson")
Data[Rm,(3:12)] <- NA
data.imputed <- missForest(Data)$ximp
Result[i,1] <- unlist(Data_test[Rm,3])
Result[i,2] <- unlist(predict(lm_mod, newdata = data.imputed[Rm,-3]))
Result[i,3] <- unlist(exp(predict(glm_pois, newdata = data.imputed[Rm,-3])))
Result[i,4] <- unlist(exp(predict(glm_nbin, newdata = data.imputed[Rm,-3])))
Result[i,5] <- unlist(data.imputed[Rm,3])
print(paste(round(i/ntry,3)*100, "%", sep = ""))
}
Best_Model <- tabulate(sapply(seq(ntry), function(i) which.min(sapply(seq(4), function(j) abs(Result[i,(j+1)]- Result[i,1])))), 4)
names(Best_Model) <- c("LM", "GLM POIS", "GLM NBIN", "MissRF")
print(Best_Model)
par(mfrow =c(4,2))
dif_abs <- do.call("rbind", lapply(seq(ntry), function(i) sapply(seq(4), function(j) abs(Result[i,(j+1)]- Result[i,1]))))
dif <- do.call("rbind", lapply(seq(ntry), function(i) sapply(seq(4), function(j) Result[i,(j+1)]- Result[i,1])))
#saveRDS(Result, file = "Resultats")
hist(dif[,1])
plot(dif[,1])
hist(dif[,2])
plot(dif[,2])
hist(dif[,3])
plot(dif[,3])
hist(dif[,4])
plot(dif[,4])
sum(dif[-480,1]^2)
sum(dif[-480,2]^2)
sum(dif[-480,3]^2)
sum(dif[-480,4]^2)
predict(glm_pois, newdata = data.imputed[Rm,-3])
predict(glm_pois, newdata = data.imputed[Rm,-3], type = "response")
exp(predict(glm_pois, newdata = data.imputed[Rm,-3]))
## DrivAge
AC_DrivAge= aggregate(base.donnees$Fire, by=list(base.donnees$DrivAge), mean)
plot(x = AC_DrivAge$Group.1 , y = AC_DrivAge$x, xlab = "Driver Age", ylab = "Average Claim Number", typ='l', main="Driver Age")
DrivAge.Fire<-rpart(Fire~DrivAge, data = base.donnees,
control = rpart.control(minsplit = 1, minbucket = 1, cp = 2.244254e-05 , maxcompete = 2, xval = 5))
par(mfrow =c(1,1))
## DrivAge
AC_DrivAge= aggregate(base.donnees$Fire, by=list(base.donnees$DrivAge), mean)
plot(x = AC_DrivAge$Group.1 , y = AC_DrivAge$x, xlab = "Driver Age", ylab = "Average Claim Number", typ='l', main="Driver Age")
DrivAge.Fire<-rpart(Fire~DrivAge, data = base.donnees,
control = rpart.control(minsplit = 1, minbucket = 1, cp = 2.244254e-05 , maxcompete = 2, xval = 5))
rpart.plot(DrivAge.Fire)
base.donnees$DrivAgeGLM<-cut(base.donnees$DrivAge, c(18,20,46,54,57,63,Inf),include.lowest = TRUE)
AC_DrivAge= aggregate(base.donnees$Fire, by=list(base.donnees$DrivAgeGLM), mean)
plot(x = AC_DrivAge$Group.1 , y = AC_DrivAge$x, xlab = "Driver Age", ylab = "Average Claim Number", typ='l', main="Vehicle Age")
base.donnees$DrivAgeGLM <- as.factor(base.donnees$DrivAgeGLM)
base.donnees[,"DrivAgeGLM"] <-relevel(base.donnees[,"DrivAgeGLM"], ref="[18,20]")
table(base.donnees$DrivAgeGLM)
## VehAge
AC_VehAge= aggregate(base.donnees$Fire, by=list(base.donnees$VehAge), mean)
plot(x = AC_VehAge$Group.1 , y = AC_VehAge$x, xlab = "Vehicle Age", ylab = "Average Claim Number", typ='l', main="Vehicle Age")
VehAge.Fire<-rpart(Fire~VehAge, data = base.donnees,
control = rpart.control(minsplit = 1, minbucket = 1, cp = 1.973112e-05 , maxcompete = 2, xval = 5))
rpart.plot(VehAge.Fire)
base.donnees$VehAgeGLM<-cut(base.donnees$VehAge, c(0,1,3,10,13,Inf),include.lowest = TRUE)
AC_VehAge= aggregate(base.donnees$Fire, by=list(base.donnees$VehAgeGLM), mean)
plot(x = AC_VehAge$Group.1 , y = AC_VehAge$x, xlab = "Vehicle Age", ylab = "Average Claim Number", typ='l', main="Vehicle Age")
base.donnees$VehAgeGLM <- as.factor(base.donnees$VehAgeGLM)
base.donnees[,"VehAgeGLM"] <-relevel(base.donnees[,"VehAgeGLM"], ref="(13,Inf]")
## BonusMalus
AC_BonusMalus= aggregate(base.donnees$Fire, by=list(base.donnees$BonusMalus), mean)
plot(x = AC_BonusMalus$Group.1 , y = AC_BonusMalus$x, xlab = "BonusMalus", ylab = "Average Claim Number", typ='l', main="BonusMalus")
BonusMalus.Fire<-rpart(Fire~BonusMalus, data = base.donnees,
control = rpart.control(minsplit = 1, minbucket = 1, cp = 4.646416e-05 , maxcompete = 2, xval = 5))
rpart.plot(BonusMalus.Fire)
base.donnees$BonusMalusGLM<-cut(base.donnees$BonusMalus, c(0,96,107,Inf),include.lowest = TRUE)
AC_BonusMalusGLM= aggregate(base.donnees$Fire, by=list(base.donnees$BonusMalusGLM), mean)
plot(x = AC_BonusMalusGLM$Group.1 , y = AC_BonusMalusGLM$x, xlab = "Vehicle Age", ylab = "Average Claim Number", typ='l', main="Vehicle Age")
base.donnees[,"BonusMalusGLM"] <-relevel(base.donnees[,"BonusMalusGLM"], ref="(96,107]")
## LicenceNb
table(base.donnees$LicenceNb)
FLicenceNb_Fire <- tapply(base.donnees$Fire, base.donnees$LicenceNb, mean)
(LicenceNb_Fire <- data.frame(LicenceNb = names(FLicenceNb_Fire), AverageFrequency = FLicenceNb_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(LicenceNb_Fire, aes(LicenceNb, AverageFrequency, fill = LicenceNb)) + geom_bar(stat = "identity")
base.donnees$LicenceNbGLM<-as.character(base.donnees$LicenceNb)
base.donnees$LicenceNbGLM[which(base.donnees$LicenceNbGLM %in% c("1","2","3"))]="123"
base.donnees$LicenceNbGLM<-as.factor(base.donnees$LicenceNbGLM)
base.donnees$LicenceNbGLM<-relevel(base.donnees$LicenceNbGLM, ref = "5")
## Payfreq
table(base.donnees$PayFreq)
FPayFreq_Fire <- tapply(base.donnees$Fire, base.donnees$PayFreq, mean)
(PayFreq_Fire <- data.frame(PayFreq = names(FPayFreq_Fire), AverageFrequency = FPayFreq_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(PayFreq_Fire, aes(PayFreq, AverageFrequency, fill = PayFreq)) + geom_bar(stat = "identity")
base.donnees$PayFreqGLM<-as.factor(base.donnees$PayFreq)
base.donnees$PayFreqGLM<-relevel(base.donnees$PayFreqGLM, ref = "Monthly")
## VehClass
FVehClass_Fire <- tapply(base.donnees$Fire, base.donnees$VehClass, mean)
(VehClass_Fire <- data.frame(VehClass = names(FVehClass_Fire), AverageFrequency = FVehClass_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(VehClass_Fire, aes(VehClass, AverageFrequency, fill = VehClass)) + geom_bar(stat = "identity")
base.donnees$VehClassGLM<-as.factor(base.donnees$VehClass)
base.donnees$VehClassGLM<-relevel(base.donnees$VehClassGLM, ref = "Most expensive")
## VehPower
FVehPower_Fire <- tapply(base.donnees$Fire, base.donnees$VehPower, mean)
(VehPower_Fire <- data.frame(VehPower = names(FVehPower_Fire), AverageFrequency = FVehPower_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(VehPower_Fire, aes(VehPower, AverageFrequency, fill = VehPower)) + geom_bar(stat = "identity")
base.donnees$VehPowerGLM<-as.factor(base.donnees$VehPower)
base.donnees$VehPowerGLM<-relevel(base.donnees$VehPowerGLM, ref = "P2")
table(base.donnees$VehPowerGLM)
## Area
FArea_Fire <- tapply(base.donnees$Fire, base.donnees$Area, mean)
(Area_Fire <- data.frame(Area = names(FArea_Fire), AverageFrequency = FArea_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(Area_Fire, aes(Area, AverageFrequency, fill = Area)) + geom_bar(stat = "identity")
base.donnees$AreaGLM<-as.factor(base.donnees$AreaGLM)
base.donnees$AreaGLM<-relevel(base.donnees$AreaGLM, ref = "A10")
table(base.donnees$AreaGLM)
base.donnees$AreaGLM
base.donnees$AreaGLM<-as.character(base.donnees$Area)
base.donnees$AreaGLM[which(base.donnees$AreaGLM %in% c("A2","A3","A4"))]="A234"
base.donnees$AreaGLM[which(base.donnees$AreaGLM %in% c("A6","A7"))]="A67"
base.donnees$AreaGLM[which(base.donnees$AreaGLM %in% c("A10","A12"))]="A1012"
base.donnees$AreaGLM<-as.factor(base.donnees$AreaGLM)
base.donnees$AreaGLM<-relevel(base.donnees$AreaGLM, ref = "A234")
base.donnees$AreaGLM<-as.factor(base.donnees$AreaGLM)
base.donnees$AreaGLM<-relevel(base.donnees$AreaGLM, ref = "A10")
base.donnees$AreaGLM<-as.character(base.donnees$Area)
base.donnees$AreaGLM[which(base.donnees$AreaGLM %in% c("A2","A3","A4"))]="A234"
base.donnees$AreaGLM[which(base.donnees$AreaGLM %in% c("A6","A7"))]="A67"
base.donnees$AreaGLM[which(base.donnees$AreaGLM %in% c("A10","A12"))]="A1012"
base.donnees$AreaGLM<-as.factor(base.donnees$AreaGLM)
base.donnees$AreaGLM<-relevel(base.donnees$AreaGLM, ref = "A234")
base.donnees$AreaGLM<-as.factor(base.donnees$AreaGLM)
table(base.donnees$AreaGLM)
## Region
FRegion_Fire <- tapply(base.donnees$Fire, base.donnees$Region, mean)
(Region_Fire <- data.frame(Region = names(FRegion_Fire), Frequency = FRegion_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(Region_Fire, aes(Region, Frequency, fill = Region)) + geom_bar(stat = "identity")
table(base.donnees$AreaGLM)
## Region
FRegion_Fire <- tapply(base.donnees$Fire, base.donnees$Region, mean)
(Region_Fire <- data.frame(Region = names(FRegion_Fire), Frequency = FRegion_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(Region_Fire, aes(Region, Frequency, fill = Region)) + geom_bar(stat = "identity")
base.donnees$RegionGLM<-as.factor(base.donnees$Region)
base.donnees$RegionGLM<-relevel(base.donnees$RegionGLM, ref = "Headquarters")
## VehUsage
FVehUsage_Fire <- tapply(base.donnees$Fire, base.donnees$VehUsage, mean)
(VehUsage_Fire <- data.frame(VehUsage = names(FVehUsage_Fire), Frequency = FVehUsage_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(VehUsage_Fire, aes(VehUsage, Frequency, fill = VehUsage)) + geom_bar(stat = "identity")
base.donnees$VehUsageGLM<-as.factor(base.donnees$VehUsage)
base.donnees$VehUsageGLM<-relevel(base.donnees$VehUsageGLM, ref = "Professional run")
##Garage
FGarage_Fire <- tapply(base.donnees$Fire, base.donnees$Garage, mean)
(Garage_Fire <- data.frame(Garage = names(FGarage_Fire), Frequency = FGarage_Fire))
#windows(width = 10.5, height = 6.5)
ggplot(Garage_Fire, aes(Garage, Frequency, fill = Garage)) + geom_bar(stat = "identity")
base.donnees$GarageGLM= as.factor(base.donnees$Garage)
#RF########
#RF########
